% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kde.R
\name{as.mesh3d.kde}
\alias{as.mesh3d.kde}
\title{Convert a 3D Kernel Density Estimate (package ks) into rgl mesh3d object}
\usage{
\method{as.mesh3d}{kde}(x, cont = 50, approx.cont = TRUE,
  method = c("tri", "ashape3d"), ashape.alpha = NULL, ...)
}
\arguments{
\item{x}{The kde object}

\item{cont}{The contour level to use}

\item{approx.cont}{Whether to compute an approximate contour level. (Default
\code{FALSE}).}

\item{method}{Which conversion method to use (see details)}

\item{ashape.alpha}{A length parameter (alpha) passed to
\code{alphashape3d::\link[alphashape3d]{ashape3d}} (see details).}

\item{...}{Additional rgl rendering parameters eventually passed to
\code{rgl::\link[rgl]{tmesh3d}}}
}
\value{
An object of class mesh3d
}
\description{
Convert a 3D Kernel Density Estimate (package ks) into rgl mesh3d object
}
\details{
There are two conversion methods. The default uses the output of the
  misc3d::contour3d function. This looks nice but seems to me to have a lot
  of redundant triangles. The alternative uses the \code{alphashape3d}
  library which produces a simpler output. \bold{But} you must provide a
  length parameter \code{ashape.alpha} which is passed to \code{alphashape3d}
}
\examples{
\dontrun{
# Assuming you have lh.voxels object from Alex
lh.voxels.m3d=lapply(lh.voxels, function(x) as.mesh3d(attr(x, 'fhat')))
shade3d(lh.voxels.m3d[[1]], col='red', alpha=.3)
# plot several at once
mapply(shade3d, lh.voxels.m3d[c(1,4,10)], col=rainbow(3), alpha=.3)

# alternatively making a smoother/simpler alphashape
# note that the parameter
am1=as.mesh3d(attr(lh.voxels[[1]], 'fhat'), method='alpha', alpha=10)
lh.voxels.m3d2=lapply(, function(x) )
}
}
\seealso{
\code{\link[ks]{plot.kde}}, \code{\link[rgl]{as.mesh3d}},
  \code{\link[nat]{as.mesh3d.ashape3d}}
}
